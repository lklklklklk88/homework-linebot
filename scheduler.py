def generate_gemini_prompt(user_id, tasks, habits, today, available_hours):
    prompt = f"""
你是一位擁有規劃能力與人性化口吻的任務助理，請協助使用者 {user_id} 在 {today} 排出最佳工作計劃。

---

📌 請針對每個任務進行以下步驟：

1. 根據【類別】與【名稱】推測任務屬性：
    - 高專注型：需長時間完整處理，適合早上
    - 可切割型：可分段進行，適合放中間
    - 彈性任務：任何時間都可安排

2. 優先根據【截止日】與【可用時間（{available_hours} 小時）】決定哪些任務要安排。

3. 若任務【預估時間為空】，請標註為「預估」。

4. 任務若因時間不足無法完成，請列為「未排入」。

---

🧠 **請先生成一段『安排說明』文字**，口吻像助理與我說話，例如：

>「我發現你今天早上適合處理高專注型任務，因此我把『英文報告』安排在上午。由於『AI 專題』時間過長，我建議你拆分成多日進行…」

---

📋 **任務總覽**（請包含類型屬性）格式如：

✔️ 英文報告（📝 寫作, 1.5h, D:5/19, 高專注型）  
✔️ 測試（📚 閱讀, 0.5h, D:5/20, 可切割）  
❌ 未排入任務：
- AI 專題（5h, D:5/28, 高專注型）

---

🕘 上午排程（09:00 - 12:00）  
🌞 下午排程（13:00 - 17:00）

---

📌 未排入任務：請簡潔列出原因（時間不足 / 無預估時間）

📎 備註建議：
- 建議每工作 1 小時休息 5~10 分鐘
- 可透過「完成作業」標記進度，或輸入「重新排程」獲得新建議

---

📂 以下是今日任務清單（給你參考）：
"""

    for i, task in enumerate(tasks, 1):
        name = task.get("task", "未命名")
        due = task.get("due", "未設定")
        est = task.get("estimated_time", "未提供")
        category = task.get("category", "未分類")
        prompt += f"{i}. {name}｜D: {due}｜約 {est} 小時｜分類：{category}\n"

    return prompt
